const puppeteer = require("puppeteer"),    express = require("express");class App {	browser;	mainPage;	server;		constructor()	{        this.app = express();        this.app.get("/", async (req, res) => {		    const { pass, pin } = req.query;		    if (pass != "@starscloud-6A~")		        return res.send(JSON.stringify({ message: "Invalid Password", status: 400 }));				    const response = await this.typePin(pin);		    res.send(JSON.stringify({ message: response, status: 200 }));		});        this.app.listen(5055, () => {		    console.log("Rodando na porta 5055: http://localhost:5055");		});    }    async init()    {    	this.browser = await puppeteer.launch({            headless: "new",            args: ["--no-sandbox"],            ignoreHTTPSErrors: true        });        this.mainPage = await this.browser.newPage();        // await this.mainPage.setDefaultNavigationTimeout(2);        await this.mainPage.authenticate({ username: "vnc", password: "vnc" });        await this.mainPage.goto("https://localhost:47990/pin");    }    async typePin(pin)    {    	return new Promise(async (resolve, reject) => {    	    await this.mainPage.type("#pin-input", pin);    	    await (await this.mainPage.waitForSelector("#form > div.card.flex-column.d-flex.p-4.mb-4 > button")).click();            const output = await this.mainPage.waitForSelector("#status > div");            resolve(await (await output.getProperty("innerText")).jsonValue());        });    }}const app = new App();app.init();